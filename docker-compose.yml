services:
  app:
    restart: always
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://nafra:test@db:5432/parag"
      LOCALSTACK_ENDPOINT: "http://localstack:4566"
      HOSTNAME_EXTERNAL: "localstack"
      HOSTNAME: "localstack"
      LOCALSTACK_AUTH_TOKEN: "ls-noraTOMO-3631-MERU-giqi-2864DeBu6977"
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_DEFAULT_REGION: "us-east-1"

      DEBUG: "${DEBUG:-0}"
    depends_on:
      - db
    links:
      - db:db
    networks:
      - panetwork

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      HOSTNAME_EXTERNAL: "localstack"
      HOSTNAME: "localstack"
      LOCALSTACK_AUTH_TOKEN: "ls-noraTOMO-3631-MERU-giqi-2864DeBu6977"
      AWS_ACCESS_KEY_ID: "test"
      AWS_SECRET_ACCESS_KEY: "test"
      AWS_DEFAULT_REGION: "us-east-1"
      DEBUG: "${DEBUG:-0}"


    networks:
      - panetwork
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    networks:
      - panetwork
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant/storage 

  
  db:
    image: postgres:16
    networks:
      - panetwork
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: nafra
      POSTGRES_PASSWORD: test
      POSTGRES_DB: parag
      DATABASE_URL: "postgresql://nafra:test@db:5432/parag"

    # add secrets for .env : .env_file
    volumes:
      - postgres_data:/var/lib/postgresql/data

configs:
  qdrant_config:
    content: |
      log_level: INFO 

volumes:
  postgres_data:

networks:
  panetwork:
    driver: bridge
